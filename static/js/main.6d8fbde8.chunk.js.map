{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","showImdbUrlError","showImgUrlError","validationUrl","url","test","createNewMovie","onAdd","props","newMovie","isCorrectImgUrl","isCorrectImdbUrl","setState","handleChange","event","target","name","value","this","onSubmit","preventDefault","htmlFor","type","id","placeholder","onChange","classNames","form__input__error","Component","App","moviesFromServer","addMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d8fbde8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\nimport classNames from 'classnames';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    showImdbUrlError: false,\n    showImgUrlError: false,\n  };\n\n  validationUrl = (url) => {\n    // eslint-disable-next-line max-len\n    const pattern = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._s+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/g;\n\n    return pattern.test(url);\n  }\n\n  createNewMovie = () => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const { onAdd } = this.props;\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    const isCorrectImgUrl = this.validationUrl(imgUrl);\n    const isCorrectImdbUrl = this.validationUrl(imdbUrl);\n\n    if (!isCorrectImdbUrl && !isCorrectImgUrl) {\n      this.setState({\n        showImdbUrlError: true,\n        showImgUrlError: true,\n      });\n\n      return;\n    }\n\n    if (!isCorrectImdbUrl) {\n      this.setState({\n        showImdbUrlError: true,\n      });\n\n      return;\n    }\n\n    if (!isCorrectImgUrl) {\n      this.setState({\n        showImgUrlError: true,\n      });\n\n      return;\n    }\n\n    onAdd(newMovie);\n\n    this.setState({\n      title: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      description: '',\n      showImdbUrlError: false,\n      showImgUrlError: false,\n    });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      showImdbUrlError,\n      showImgUrlError,\n    } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          this.createNewMovie();\n        }}\n      >\n\n        <div className=\"title\">Add new movie</div>\n        <label htmlFor=\"title\">\n          <div>Title:</div>\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            placeholder=\"Title\"\n            className=\"form__input\"\n            value={title}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"description\">\n          <div>Description:</div>\n          <textarea\n            name=\"description\"\n            id=\"description\"\n            placeholder=\"Description\"\n            className=\"form__input\"\n            value={description}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"imgUrl\">\n          ImgUrl:&nbsp;\n          {showImgUrlError && (\n            <span className=\"error\">\n              Enter correct img url\n            </span>\n          )}\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            id=\"imgUrl\"\n            placeholder=\"ImgUrl\"\n            className={classNames(\n              'form__input',\n              { form__input__error: showImgUrlError },\n            )}\n            value={imgUrl}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"imdbUrl\">\n          ImdbUrl:&nbsp;\n          {showImdbUrlError && (\n            <span className=\"error\">\n              Enter correct imdb url\n            </span>\n          )}\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            id=\"imdbUrl\"\n            placeholder=\"ImdbUrl\"\n            className={classNames(\n              'form__input',\n              { form__input__error: showImdbUrlError },\n            )}\n            value={imdbUrl}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"imdbId\">\n          <div>ImdbId:</div>\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            id=\"imdbId\"\n            placeholder=\"ImdbId\"\n            className=\"form__input\"\n            value={imdbId}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <div>\n          <button\n            type=\"submit\"\n            className=\"button\"\n          >\n            Add movie\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    // put your code here\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}